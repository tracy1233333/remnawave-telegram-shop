
name: Build docker image

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Add this step to set up BuildX
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: image=moby/buildkit:latest

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/remnawave-telegram-shop-bot
          tags: |
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=short,prefix=
            type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  send-notification:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set commit message
        id: commit-message
        shell: bash
        run: |
            if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
              # For tag events
              TAG_MSG=$(git tag -l --format='%(contents)' ${{ github.ref_name }})
              if [ -z "$TAG_MSG" ]; then
                TAG_MSG="Release ${{ github.ref_name }}"
              fi
            else
              # For workflow_dispatch or other events
              TAG_MSG="${{ github.event.head_commit.message || format('Manual build from {0}', github.ref_name) }}"
            fi
            echo "message<<EOF" >> $GITHUB_OUTPUT
            echo "$TAG_MSG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
      

      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ‚úÖ Build finished.
            üöÄ Project: remnawave-telegram-shop-bot
            üõ†Ô∏è ${{ github.ref_name }}
            üìù Message: ${{ steps.commit-message.outputs.message }}
            üîó Image: ghcr.io/${{ github.repository_owner }}/remnawave-telegram-shop-bot:${{ github.ref_name }}
